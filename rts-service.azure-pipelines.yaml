name: $(Build.DefinitionName)_$(Build.SourceBranchName)_$(date:yyyyMMdd)$(rev:.r)

pool:
  name: "rsp-manageddevopspool"

trigger:
  branches:
    include:
    - main
  paths: # File paths to include or exclude for triggering a run.
    exclude: # List of items to exclude.
    - src/Functions/**

parameters:
  - name: env
    displayName: Environment
    type: string
    default: dev
    values:
      - dev
      - systemtest_manual
      - systemtest_auto
      - uat
      - pre_prod
      - production
  - name: devops_library_branch
    displayName: DevOps Library Branch
    type: string
    default: main
  - name: run_sonarcloud_analysis
    displayName: Run Sonar Cloud Analysis
    type: boolean
    default: true
  - name: browser
    displayName: Select a Browser
    type: string
    default: chromium
    values:
      - chromium
      - safari
      - firefox
  - name: tests_run_timeout
    type: number
    displayName: Automated Tests Run Timeout
    default: 10
  - name: skip_deployment
    displayName: Skip Deployment
    type: boolean
    default: true

variables:
  - group: 'RTS_ContainerApp' # TODO replace value
  - name: vstsFeed
    value: "0e030eb0-cb72-4f42-b99a-26e6544271c3/0a3e0ad2-23b6-4e8b-ae12-cd6d01fe97e7"
  - name: solution
    value: "**/*.sln"
  - name: project
    value: "**/*.csproj"
  - name: projectForContainerBuild
    value: "Rsp.RtsService.csproj"
  - name: buildConfiguration
    value: "Release"
  - name: service_connection
    ${{ if in(parameters.env, 'dev') }}:
      value: "ARM Dev Connection New"
    ${{ if in(parameters.env, 'systemtest_manual') }}:
      value: "ARM Manual Test Connection"
    ${{ if in(parameters.env, 'systemtest_auto') }}:
      value: "ARM Automated Test Connection"
    ${{ if in(parameters.env, 'uat') }}:
        value: "ARM UAT Connection"
    ${{ if in(parameters.env, 'pre_prod') }}:
        value: "ARM PreProd Connection"
    ${{ if in(parameters.env, 'production') }}:
        value: "ARM Production Connection"

resources:
  repositories:
    - repository: library
      type: github
      name: 'HealthResearchAuthority/rsp-azure-devops-library'
      endpoint: AzureDevOpsToGitHubConnection
      ref: ${{ parameters.devops_library_branch }}
    - repository: e2e_tests
      type: github
      name: 'HealthResearchAuthority/rsp-iras-qa'
      endpoint: AzureDevOpsToGitHubConnection
      ref: main
    - repository: api_tests
      type: github
      name: 'HealthResearchAuthority/rsp-iras-api-tests'
      endpoint: AzureDevOpsToGitHubConnection
      ref: main
    - repository: service_defaults
      type: github
      name: 'HealthResearchAuthority/rsp-service-defaults'
      endpoint: AzureDevOpsToGitHubConnection
      ref: main

stages:
  - stage: Build
    displayName: "Build Stage"
    condition: and(eq('${{ parameters.env }}', 'dev'), eq('${{ parameters.skip_deployment }}', 'true'))
    jobs:
      - template: jobs/build.yaml@library
        parameters:
          run_github_security_scan: false
          sonar_project_key: HealthResearchAuthority_rsp-rts-service
          sonar_project_name: rsp-rts-service
          run_sonarcloud_analysis: ${{ parameters.run_sonarcloud_analysis }}
          install_aspire: true
          service_defaults_repo: service_defaults
          
  - stage: dev
    displayName: "Deploy to Development"
    variables: 
      - group: 'DevelopmentEnvironment'
    condition: and(eq('${{ parameters.env }}', 'dev'), eq('${{ parameters.skip_deployment }}', 'false'))
    jobs:
      - template: jobs/deploy.yaml@library
        parameters:
          install_aspire: true
          service_defaults_repo: service_defaults
          
  - stage: systemtest_auto
    variables: 
    - group: 'STAutoEnvironment'
    condition: eq('${{ parameters.env }}', 'systemtest_auto')
    jobs:
      - template: jobs/deploy.yaml@library
        parameters:
          install_aspire: true
          service_defaults_repo: service_defaults
      - ${{ if eq(variables.run_e2e_tests, 'true') }}:
        - template: jobs/e2e_tests.yaml@library
          parameters:
            browser: ${{ parameters.browser }}
            repo: e2e_tests
            tests_run_timeout: ${{ parameters.tests_run_timeout }}

      - ${{ if eq(variables.run_api_tests, 'true') }}:
        - template: jobs/api_tests.yaml@library
          parameters:
            browser: ${{ parameters.browser }}
            repo: api_tests
            tests_run_timeout: ${{ parameters.tests_run_timeout }}

  - stage: systemtest_manual
    variables: 
    - group: 'STManualEnvironment'
    condition: eq('${{ parameters.env }}', 'systemtest_manual')
    jobs:
      - template: jobs/deploy.yaml@library
        parameters:
          install_aspire: true
          service_defaults_repo: service_defaults

  - stage: uat
    variables: 
    - group: 'UATEnvironment'
    condition: eq('${{ parameters.env }}', 'uat')
    jobs:
      - template: jobs/deploy.yaml@library
        parameters:
          install_aspire: true
          service_defaults_repo: service_defaults

  - stage: pre_prod
    variables: 
    - group: 'PreProdEnvironment'
    condition: eq('${{ parameters.env }}', 'pre_prod')
    jobs:
      - template: jobs/deploy.yaml@library
        parameters:
          install_aspire: true
          service_defaults_repo: service_defaults

  - stage: production
    variables: 
    - group: 'ProductionEnvironment'
    condition: eq('${{ parameters.env }}', 'production')
    jobs:
      - template: jobs/deploy.yaml@library
        parameters:
          install_aspire: true
          service_defaults_repo: service_defaults

